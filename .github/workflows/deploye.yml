---
# ECS Task Definitions and Services for the Employee Management System

# Notes:
# 1. Replace YOUR_AWS_ACCOUNT_ID with your actual AWS Account ID.
# 2. Replace YOUR_ECR_BASE_URL with your ECR repository URL (e.g., 123456789012.dkr.ecr.us-east-1.amazonaws.com).
# 3. The Subnet and Security Group IDs are placeholders. You should get the actual values from the output of the create_ecs_infra.sh script.
# 4. This template assumes you have built and pushed Docker images for each service to your ECR repository.

# ---------------------------------------------------
# Eureka Server
# ---------------------------------------------------

name: Deploy to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker images
        run: |
          docker build -t ${{ secrets.ECR_BASE_URL }}/eurekaserver:latest ./eurekaserver
          docker build -t ${{ secrets.ECR_BASE_URL }}/backend-springboot:latest ./backend-springboot
          docker build -t ${{ secrets.ECR_BASE_URL }}/productbackend:latest ./productbackend
          docker build -t ${{ secrets.ECR_BASE_URL }}/inventorybackend:latest ./inventorybackend
          docker build -t ${{ secrets.ECR_BASE_URL }}/orderbackend:latest ./orderbackend
          docker build -t ${{ secrets.ECR_BASE_URL }}/employee-frontend:latest ./employee-frontend
          docker push ${{ secrets.ECR_BASE_URL }}/eurekaserver:latest
          docker push ${{ secrets.ECR_BASE_URL }}/backend-springboot:latest
          docker push ${{ secrets.ECR_BASE_URL }}/productbackend:latest
          docker push ${{ secrets.ECR_BASE_URL }}/inventorybackend:latest
          docker push ${{ secrets.ECR_BASE_URL }}/orderbackend:latest
          docker push ${{ secrets.ECR_BASE_URL }}/employee-frontend:latest

      - name: Deploy to ECS using AWS CLI
        run: |
          aws ecs update-service --cluster my-ecs-cluster --service eurekaserver-service --force-new-deployment
          aws ecs update-service --cluster my-ecs-cluster --service backend-springboot-service --force-new-deployment
          aws ecs update-service --cluster my-ecs-cluster --service productbackend-service --force-new-deployment
          aws ecs update-service --cluster my-ecs-cluster --service inventorybackend-service --force-new-deployment
          aws ecs update-service --cluster my-ecs-cluster --service orderbackend-service --force-new-deployment
          aws ecs update-service --cluster my-ecs-cluster --service employee-frontend-service --force-new-deployment