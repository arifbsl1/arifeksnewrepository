name: Deploy to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker images
        env:
          ECR_BASE_URL: ${{ secrets.ECR_BASE_URL }}
        run: |
          docker build -t $ECR_BASE_URL/eurekaserver:latest ./eurekaserver
#          docker build -t $ECR_BASE_URL/backend-springboot:latest ./backend-springboot
#          docker build -t $ECR_BASE_URL/productbackend:latest ./productbackend
#          docker build -t $ECR_BASE_URL/inventorybackend:latest ./inventorybackend
#          docker build -t $ECR_BASE_URL/orderbackend:latest ./orderbackend
#          docker build -t $ECR_BASE_URL/employee-frontend:latest ./frontend-angular
#          docker push $ECR_BASE_URL/eurekaserver:latest
#          docker push $ECR_BASE_URL/backend-springboot:latest
#          docker push $ECR_BASE_URL/productbackend:latest
#          docker push $ECR_BASE_URL/inventorybackend:latest
#          docker push $ECR_BASE_URL/orderbackend:latest
#          docker push $ECR_BASE_URL/employee-frontend:latest

      - name: Deploy CloudFormation Stack
        run: |
          aws cloudformation deploy \
            --template-file ./.github/workflows/cloudformation-template \
            --stack-name employee-management-services \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides \
              VpcId=${{ secrets.VPC_ID }} \
              PublicSubnet1=${{ secrets.PUBLIC_SUBNET_1 }} \
              PublicSubnet2=${{ secrets.PUBLIC_SUBNET_2 }} \
              AlbListenerArn=${{ secrets.ALB_LISTENER_ARN }} \
              EcsServiceSecurityGroup=${{ secrets.ECS_SERVICE_SECURITY_GROUP }} \
              ClusterName=${{ secrets.CLUSTER_NAME }} \
              EcrBaseUrl=${{ secrets.ECR_BASE_URL }} \
              AccountId=${{ secrets.AWS_ACCOUNT_ID }}